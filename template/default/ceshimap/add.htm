<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
    <title>21厂房网-添加厂房信息</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
    <meta name="description" content="" />
    <meta name="keywords" content="" />
    <link rel="stylesheet" href="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css" />
    <style type="text/css">
    body {
        font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif;
        font-size: 15px;
        margin: 0;
        padding: 0;
    }
    
    p,
    h1,
    form,
    button {
        border: 0;
        margin: 0;
        padding: 0;
    }
    
    #top-bar {
        position: relative;
        padding-top: 10px;
        height: 40px;
        color: #fff;
        font-family: "Microsoft YaHei";
        font-size: 16px;
        background-color: #008B00;
        z-index: 999;
    }
    /* ———– My Form ———– */
    
    .myform {
        /*width: 98.5%;*/
    }
    /* ———– stylized ———– */
    
    #stylized {
        /*border: solid 1px #b7ddf2;*/
        background: #ebf4fb;
    }
    
    #stylized label {
        font-weight: bold;
        margin-top: 5px;
    }
    
    .stylized input,
    .stylized select {
        /*float: left;*/
        font-size: 14px;
        padding: 4px 2px;
        border: solid 1px #aacfe4;
        width: 6rem;
        /*margin: 2px 10px 5px 10px;*/
    }
    .input-small {
        width: 2.5rem !important;
    }
    
    #stylized .getloc-btn {
        width: 80px;
    }
    
    .getloc-btn:hover {
        cursor: pointer;
    }
    
    #stylized .sub {
        float: right;
        width: 70px;
        margin-top: 5px;
        /*margin-right: 1rem;*/
    }
    
    .dituContent {
        margin: 0 auto;
        /*margin-top: 2px;*/
        width: 100%;
        overflow: hidden;
    }
    
    #getPos {
        position: relative;
        top: 3px;
        /*left: 400px;*/
        /*margin-top: 10px;*/
    }
    
    #getPos:hover {
        cursor: pointer;
    }
    
    #pos-label {
        margin-left: 25px;
    }
    
    #rentSetting {
        position: relative;
        top: 3px;
    }
    
    #rentSetting:hover {
        cursor: pointer;
    }
    .sperate-line {
        color: #336600;
        /*font-size: 20px;*/
        /*line-height: 1.5;*/
        margin: -3px 5px 0 5px;
    }
    /* menus-bar */
    #menus-bar{
        float: right;
        margin-right: 16px;
        display: inline-block;
    }
    #menus-bar span{
        margin-left: 0.5rem;
        margin-top: -9px;   
        padding: 0.5rem;
    }
    
    #gotoCeshimap a,
    #editPage a,
    #back a {
        color: #fff;
        text-decoration: none;
    }
 
    #menus-bar span:hover{
        background-color: #00a000;
    }
    .menus-bar-click{
        background-color: #00a000;
    }

    #toolbar {
        float: right;
        margin-right: 15px;
    }
    
    #toolbar img {
        width: 24px;
        height: 24px;
        margin-right: 10px;
    }
    
    #toolbar img:hover {
        cursor: pointer;
        background-color: #00a000;
    }
    #rentSetting{
        display: none;
    }
    #fullsrceen-show{
        position: relative;
    }
    #small-tool{
        position: fixed;
        left: 3%;
        top: 88%;
        z-index: 999;
    }
    #small-tool img{
        display: block;
        background-color: rgba(255,255,255,0.8);
    }
    #myPosition{
        width: 24px;
        padding: 5px;
        margin-bottom: 1px;
    }
    #screen-ctl{
        width: 20px;
        padding: 7px;
    }
    #screen-ctl:hover,
    #myPosition:hover{
        cursor: pointer;
    }
    #select-pane{
        display: none;
        position: absolute;
        right: 35px;
        top: 90px;
        padding: 8px;
        background-color: #f5f5f5;
        z-index: 99999;
    }
    #select-style{
        margin-bottom: 8px;
    }
    #map-pane{
        display: none;
        position: absolute;
        background-color: rgba(60,60,60,0.8);
        padding: 5px 15px;
    }
    #map-pane span{
        display: block;
        padding-bottom: 5px;
    }
    #map-pane span:hover{
        cursor: pointer;
        color: #00ff00;
    }
    .selected-map:before{
        content: "√";
        position: absolute;
        left: 5px;
    }
    /* 绘制 */
    /* .BMapLib_Drawing .BMapLib_circle_hover {
        display: none;
    }
    .BMapLib_Drawing .BMapLib_marker {
        display: none;
    } */
    @media screen and (max-width: 320px){
        
        #top-bar{
            height: 66px;
        }
        #stylized{
            display: none;
        }
        /* .province,.city,.district,#pos-label,#location,#rent,#rent-label{
            display: none;
        } */
    }
    @media screen and (max-width: 479.9px){
        html{
             font-size: 50% !important;
        }
        #top-bar{
            height: 50px;
        }
        #top-bar .logo-word{
            display: none;
        }
        #stylized{
            display: none;
        }
        /* .province,.city,.district,#pos-label,#location,#rent,#rent-label{
            display: none;
        } */
        #rent{
            width: 57px !important;
        }
    }
    @media screen and (min-width: 480px){
        html{
             font-size: 62.5% !important;
        }
        #menus-bar{
            font-size: 12px;
        }
        #top-bar .logo-word{
            display: none;
        }
        /* .province,.city,.district,#pos-label,#location,#rent,#rent-label{
            display: none;
        } */
        #stylized{
            display: none;
        }
        #top-bar{
            height: 50px;
        }
        #rent{
            width: 57px !important;
        }
    }
    @media screen and (min-width: 640px){
        html{
             font-size: 125% !important;
        }
        #menus-bar{
            font-size: 12px;
        }
        #top-bar{
            height: 40px;
        }
        #top-bar .logo-word{
            display: none;
        }
        #stylized{
            display: inline-block;
        }
        /* .province,.city,.district,#pos-label,#location,#rent,#rent-label{
            display: inline-block;
        } */
        #rent{
            width: 57px !important;
        }
    }
    @media screen and (min-width: 768px) {
        html{
             font-size: 150% !important;
        }
        #menus-bar{
            font-size: 16px;
        }
        #top-bar .logo-word{
            display: inline-block;
        }
        
    }
    
    @media screen and (min-width: 1024px) {
        html{
             font-size: 187.5% !important;
        }
        #menus-bar{
            font-size: 16px;
        }
        #top-bar .logo-word{
            display: inline-block;
        }
        #town {
           width: 120px !important;
        }
    }
    </style>
</head>

<body>
    <div id="top-bar">
        <span class="logo-word">&nbsp&nbsp添加厂房信息</span>
        <div id="menus-bar">
            <span id="gotoCeshimap"><a href="<?php echo AJ_PATH;?>ceshimap/" target="_blank">查看地图</a> </span>
            <span id="addPage" class="menus-bar-click">添加房源</span>
            <span id="editPage"><a href="<?php echo AJ_PATH;?>ceshimap/dtEditor/edit.html" target="_blank">修改房源</a> </span>
            <span id="back"><a href="<?php echo AJ_PATH;?>">返回首页</a></span>
        </div>
        <div id="toolbar">
            <img id="change-map" title="切换地图" src="<?php echo AJ_PATH;?>file/image/changemap.png" alt="切换地图" />
            <div id="map-pane">
                <span class="baidumap selected-map">&nbsp;百度地图</span>
                <span class="gaodemap">&nbsp;高德地图</span>
            </div>
            <img id="getDis" title="测距离" src="<?php echo AJ_PATH;?>file/image/distance.png" alt="测距离" />
            <img id="getArea" title="测面积" src="<?php echo AJ_PATH;?>file/image/area.png" alt="测面积" />
        </div>
    </div>
    <div id="stylized" class="myform stylized">
        <form id="form" name="form" method="post" action="<?php echo AJ_PATH;?>/ceshimap/add2DB.php">
            <label>地址信息:</label>
            <input type="text" name="address" id="address" placeholder="请输入地址信息..." value="" />
            <input type="button" value="获取坐标" class="getloc-btn"/>
            <!-- <img src="<?php echo AJ_PATH;?>file/image/postion.png" id="getPos" alt="定位" title="定位在地图上获取坐标信息"> -->
            <img src="<?php echo AJ_PATH;?>file/image/postion.png" id="getPos" alt="定位" title="定位在地图上获取坐标信息">
            <label id="pos-label">坐标:
            </label>
            <input type="text" name="location" id="location" placeholder="输入地址信息,点击获取地址后获取" value="" />
            <label id="rent-label">出租信息:
            </label>
            <!-- <input type="text" name="rent" id="rent" placeholder="请输入出租信息..." value="" /> -->
            <select name="rent" id="rent" class="input-small">
                {loop $A $key $val}
                <option value="{$val['rent']}">{$val['rent']}</option>
                {/loop}
            </select>
            <img src="<?php echo AJ_PATH;?>file/image/seting.png" id="rentSetting" alt="设置" title="修改,添加出租信息">
            <!-- <div class="spacer"></div>
            <label class="province">省份:</label>
            <input type="text" id="province" class="input-small province" />
            <label class="city">&nbsp&nbsp城市:</label>
            <input type="text" id="city" class="input-small city" />
            <label class="district">&nbsp&nbsp区:</label>
            <input type="text" id="district" class="input-small district" />
            <label class="town">&nbsp&nbsp镇:</label>
            <input type="text" id="town" class="input-small town" />
            <label class="sperate-line">|</label>
            <label>&nbsp&nbsp厂房面积:</label>
            <input type="text" id="area" class="input-small" />
            <label>&nbsp&nbsp售价:</label>
            <input type="text" id="sellingPrice" class="input-small" /> -->
            <input class="sub" id="sub" type="button" value="提交" />
        </form>
    </div>
    <div id="rentSettingDiv"></div>
    <div id="fullsrceen-show">  
        <div id="dituContent" class="dituContent"> </div>
        <div id="gaodeContent" class="dituContent" style="display:none"> </div>
        <div id="small-tool">
            <img id="myPosition" src="<?php echo AJ_PATH;?>file/image/myPosition.png" alt="位置" />
            <img id="screen-ctl" class="fullscreen" src="<?php echo AJ_PATH;?>file/image/fullscreen.png" alt="全屏" />
        </div>
        <div id="select-pane">
            <div id="select-style">
                <p>选择颜色</p>
                <input type="radio" value="red" name="select-style">红色
                <input type="radio" value="yellow" name="select-style">黄色
                <input type="radio" value="blue" name="select-style">蓝色
                <input type="radio" value="pink" name="select-style">粉红色
                <input type="radio" value="purple" name="select-style">紫色
                <input type="radio" value="white" name="select-style">白色
            </div>
            <div id="select-shape">
                <p>选择点形状</p>
                <input type="radio" value="BMap_Symbol_SHAPE_CIRCLE" name="select-shape">定位点
                <input type="radio" value="BMap_Symbol_SHAPE_RECTANGLE" name="select-shape">矩形
                <input type="radio" value="BMap_Symbol_SHAPE_RHOMBUS" name="select-shape">菱形
                <input type="radio" value="BMap_Symbol_SHAPE_STAR" name="select-shape">五角星
                <input type="radio" value="BMap_Symbol_SHAPE_BACKWARD_CLOSED_ARROW" name="select-shape">箭头
                <input type="radio" value="BMap_Symbol_SHAPE_PLANE" name="select-shape">飞机
            </div>
        </div>
    </div>
    <script src="http://libs.baidu.com/jquery/1.9.0/jquery.min.js"></script>
    <script src="http://api.map.baidu.com/api?v=2.0&ak=TPrSyQXhBwEjWzfXzPw3iPXxqISq2idO"></script>
    <script src="http://api.map.baidu.com/library/MarkerTool/1.2/src/MarkerTool.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/DistanceTool/1.2/src/DistanceTool_min.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/GeoUtils/1.2/src/GeoUtils_min.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js"></script>
    <!-- 点聚合 -->
    <script type="text/javascript" src="http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js"></script>

    <script src="<?php echo AJ_STATIC;?>file/script/myCommon.js"></script>
    <script>
    /*高度自适应*/
    var dituContent = document.getElementsByClassName("dituContent"),
    totalHeight = document.documentElement.clientHeight,
    stylizedHight = document.getElementById("stylized")&&window.getComputedStyle(document.getElementById("stylized"),null).getPropertyValue("display")!=="none"?document.getElementById("stylized").clientHeight:0,
    topBarHeight = document.getElementById("top-bar").clientHeight;
    for (var i = 0; i < dituContent.length; i++) {
        dituContent[i].style.height = totalHeight - stylizedHight - topBarHeight -5 +"px";
    }
    console.log(dituContent);
    window.onresize = debounce(function(){
        doResize();
    },500,false);
    function doResize(){
        var totalHeight = document.documentElement.clientHeight,
        stylizedHight = document.getElementById("stylized")?document.getElementById("stylized").clientHeight:0,

        topBarHeight = document.getElementById("top-bar").clientHeight;
        for (var i = 0; i < dituContent.length; i++) {
            dituContent[i].style.height = totalHeight - stylizedHight - topBarHeight -5 +"px";
        }

        console.log(totalHeight,stylizedHight,topBarHeight,totalHeight - stylizedHight - topBarHeight -15 +"px",dituContent.style.height);

    }
    function debounce(func,threshold,execAsap,fun){
        var timeout;
        return function debounced(){
            var obj = this,args = arguments;
            function delayed(){
                if(!execAsap) func.apply(obj,args);
                timeout = null;
            }
            if(timeout) {
                clearTimeout(timeout);
            }else if(execAsap){
                func.apply(obj,args);
            }
            timeout = setTimeout(delayed,threshold||200);
            if(fun) fun();
        }
    }
    </script>
    <script type="text/javascript">
    var tmap;//调试用
    $(function(){
        /*全局变量*/
        var styleOptions = {
                strokeColor: "red", //边线颜色。
                fillColor: "red", //填充颜色。当参数为空时，圆形将没有填充效果。
                strokeWeight: 2, //边线的宽度，以像素为单位。
                strokeOpacity: 0.8, //边线透明度，取值范围0 - 1。
                fillOpacity: 0, //填充的透明度，取值范围0 - 1。
                strokeStyle: 'solid' //边线的样式，solid或dashed。
            },marker,markerStyleOptions={//绘制的点样式，该样式会改变
                icon:new BMap.Symbol(BMap_Symbol_SHAPE_POINT, {
                    // anchor: jsonIcon.l, //位置偏移
                    scale: 1.2, //1.5, //图标缩放大小
                    fillColor: "red", //填充颜色
                    strokeColor: "red",
                    fillOpacity: 1 //填充透明度
                })
            },
            markerOpt = {//定位点使用
                icon: new BMap.Symbol(BMap_Symbol_SHAPE_BACKWARD_CLOSED_ARROW, {
                    scale: 1.2,
                    strokeWeight: 1,
                    rotation: 180,
                    fillColor: 'blue',
                    fillOpacity: 0.8
                })
            },selectSet={},
        baseNum=1000000,//opacity*baseNum就是id信息
        overlays = [], drawingObj = [], map;
        selectSet.radioInd1 = 0,selectSet.radioInd2 = 0,selectSet.radioColor = "red",//默认颜色
            selectSet.symbolType = "BMap_Symbol_SHAPE_POINT",selectSet.symbolScale = "1.2",
            selectSet.starPath = "M1.281866564586093,10.091353266867403 L9.81234759469662,10.091353266867403 L12.448331873830627,1.9874338336331738 L15.084317651818987,10.091353266867403 L23.614797183075044,10.091353266867403 L16.71350568986501,15.099793585352003 L19.349626364749437,23.203713018586193 L12.448331873830627,18.195136304382387 L5.54703888176594,23.203713018586193 L8.1831603060779,15.099793585352003 L1.281866564586093,10.091353266867403 z",
            selectSet.rectPath = "M1,1 L1,20 L20,20 L20 1 z ";
        //切换地图模块
        function outOfChina(lat, lng) {
            if ((lng < 72.004) || (lng > 137.8347)) {
                return true;
            }
            if ((lat < 0.8293) || (lat > 55.8271)) {
                return true;
            }
            return false;
        }
        var changeMap = {
            init:function(map){
                var self = this;
                $('#change-map').on('click', function(event) {
                    if($('#map-pane').css('display')!="none"){
                        $('#map-pane').css('display', 'none');
                    }else{
                        $("#map-pane").css('display', 'block');
                    }
                    return;        
                });
                $('#map-pane span').on('click', function(event) {
                    $("#map-pane").css('display', 'none');
                    if($(this).hasClass('selected-map')){
                       return;
                    }else{
                       $("#map-pane span").removeClass('selected-map');
                       $(this).addClass('selected-map');
                       //切换地图
                       console.log("切换地图");
                       if($(this).hasClass('gaodemap')){
                           var bMapInfo = self.getMapInfo("bMap",map);
                           var gcjPos = self.bd2gcj(bMapInfo.center.lat,bMapInfo.center.lng);
                           $('#dituContent').css('display', 'none');
                           $('#gaodeContent').css('display', 'block');
                           self.appendAMap(bMapInfo,gcjPos);
                       }else{//百度地图
                           $('#dituContent').css('display', 'block');
                           $('#gaodeContent').css('display', 'none');
                           var aMapInfo = self.getMapInfo("aMap",self.aMap);
                           var bdPos = self.gcj2bd(aMapInfo.center.lat,aMapInfo.center.lng);
                           var pt = new BMap.Point(bdPos.lng,bdPos.lat);
                           if($('#dituContent').css('display')=="block"){
                                setTimeout(function(){
                                  map.centerAndZoom(pt,aMapInfo.zoom);
                                },100);
                           }
                           
                       }
                    } 
                    return;    
                });
            },
            appendAMap:function(mapInfo,gcjPos){
                var self = this;

                var initAMap= function(){
                    var aMap = new AMap.Map('gaodeContent',{
                        resizeEnable: true,
                        zoom: mapInfo.zoom,
                        center: [gcjPos.lng, gcjPos.lat]
                    });
                    self.aMap = aMap;
                    aMap.plugin(["AMap.MapType"],function(){
                    //地图类型切换
                        var type;
                        switch(mapInfo.mapType.trim()){
                            case "混合":
                                type= new AMap.MapType({
                                    defaultType:1, //使用3D地图
                                    showRoad:true
                                });
                                break;
                            case "卫星":
                                type= new AMap.MapType({
                                    defaultType:1
                                });
                                break;
                            case "地图":
                                type= new AMap.MapType({
                                    defaultType:0,
                                    showRoad:true
                                });
                                break;
                        }
                        if(!type){
                            type= new AMap.MapType({
                                defaultType:1, 
                                showRoad:true
                            });
                        } 
                        aMap.addControl(type);
                    });
                    
                }
                var head = document.getElementsByTagName('head')[0];
                var script = document.createElement('script');
                script.type = "text/javascript";
                script.src = "http://webapi.amap.com/maps?v=1.3&key=886fdc3252fdaf50f0e9bd902965aa01"
                script.onreadystatechange = function(){
                    if(this.readyState == "compelete") initAMap();
                }
                script.onload = function(){
                    initAMap();
                }
                head.appendChild(script);
            },
            getMapInfo:function(mapName,map){
               if(mapName=="bMap"){
                   return {
                       zoom:map.getZoom(),
                       mapType:map.getMapType().getName(),
                       center:map.getCenter()
                    } 
               }else if(mapName=="aMap"){
                    return {
                       zoom:map.getZoom(),
                       // mapType:map.getMapType().getName(),
                       center:map.getCenter()
                    } 
               }
               
            },
            bd2gcj:function(bdLat,bdLng){
                if (outOfChina(bdLat, bdLng)) {
                    return {"lat": bdLat, "lng": bdLng};
                }
                var x = bdLng - 0.0065, y = bdLat - 0.006;
                var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * Math.PI);
                var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * Math.PI);
                var gcjLng = z * Math.cos(theta);
                var gcjLat = z * Math.sin(theta);
                return {"lat": gcjLat, "lng": gcjLng};
            },
            gcj2bd:function(gcjLat, gcjLng){
                if (outOfChina(gcjLat, gcjLng)) {
                    return {"lat": gcjLat, "lng": gcjLng};
                }
                var x = gcjLng, y = gcjLat;
                var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * Math.PI);
                var theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * Math.PI);
                var bdLng = z * Math.cos(theta) + 0.0065;
                var bdLat = z * Math.sin(theta) + 0.006;
                return {"lat": bdLat, "lng": bdLng};
            }
        };
        
        //初始化
        function initMap(){
            map = new BMap.Map("dituContent");
            map.centerAndZoom("上海", 12);
            map.setMapType(BMAP_HYBRID_MAP);
            map.enableInertialDragging(); //启用地图惯性拖拽，默认禁用
            map.enableContinuousZoom(); //启用连续缩放效果，默认禁用
            map.enableScrollWheelZoom(); //启用滚轮放大缩小，默认禁用
            map.enableKeyboard();
    
            // map.addControl(new BMap.NavigationControl()); //添加默认缩放平移控件
            // map.addControl(new BMap.OverviewMapControl({
            //     isOpen: true,
            //     anchor: BMAP_ANCHOR_BOTTOM_RIGHT
            // })); //右下角，打开
            var ctrl_ove = new BMap.OverviewMapControl({
                anchor: BMAP_ANCHOR_BOTTOM_RIGHT,
                isOpen: 1
            });
            map.addControl(ctrl_ove);
            //向地图中添加比例尺控件
            var ctrl_sca = new BMap.ScaleControl({
                anchor: BMAP_ANCHOR_BOTTOM_LEFT
            });
            map.addControl(ctrl_sca);
            // 向地图中添加地图切换控件
            var ctrl_type = new BMap.MapTypeControl({
                anchor: BMAP_ANCHOR_TOP_RIGHT
            });
            map.addControl(ctrl_type);
            var stCtrl = new BMap.PanoramaControl(); //构造全景控件
            stCtrl.setOffset(new BMap.Size(20, 90));
            map.addControl(stCtrl); //添加全景控件

            toolbarEvent(map);//工具条
            drawingManager(map);//绘制管理
    
            setTimeout(function(){
                loadAllOverlays(map); //加载绘制的图形
                loadAllMarkers(map);
            },100);
            getMyPosition(map);//获取当前位置定位
            fullScreenCtl();//全屏
            changeMap.init(map);//切换地图模块
            tmap = map;//调试用
        };//
        initMap();
        /*全屏*/
        function fullScreenCtl(){
            $('body').on('click', '#screen-ctl', function(event) {
                if($(this).hasClass('fullscreen')){//全屏
                    $(this).removeClass('fullscreen');
                    $(this).addClass('smallscreen');
                    launchFullScreen(document.documentElement);
                    if(parseFloat($(".dituContent").css('width')) < 500||parseFloat($(".dituContent").css('height'))<541){
                        $('.BMapLib_Drawing').css('display', 'none');
                        $('#top-bar').css('display', 'none');
                    }
                    $(this).attr('src', '<?php echo AJ_PATH;?>file/image/smallscreen.png');
                }else if($(this).hasClass('smallscreen')){
                    $(this).removeClass('smallscreen');
                    $(this).addClass('fullscreen');
                    if(document.cancelFullScreen) {  
                        document.cancelFullScreen();  
                    } else if(document.mozCancelFullScreen) {  
                      document.mozCancelFullScreen();  
                    } else if(document.webkitCancelFullScreen) {  
                      document.webkitCancelFullScreen();  
                    }  
                    $('#top-bar').css('display', 'block');
                    $('.BMapLib_Drawing').css('display', 'block');
                    $(this).attr('src', '<?php echo AJ_PATH;?>file/image/fullscreen.png');
                }
            });
        }
        function launchFullScreen(element) {  
            if(element.requestFullscreen) {  
              element.requestFullscreen();  
            } else if(element.mozRequestFullScreen) {  
              element.mozRequestFullScreen();  
            } else if(element.webkitRequestFullscreen) {  
              element.webkitRequestFullscreen();  
            } else if(element.msRequestFullscreen) {  
              element.msRequestFullscreen();  
            }  
        } 
        /**
         * 限制点聚合的样式
         * @param  {[String]} dom     [监控改dom的宽度]
         * @param  {[Number]} width   [小于改宽度被视为手机端]
         * @param  {[Array]} markers [点集合数组]
         * @return {[MarkerClusterer]}         [MarkerClusterer]
         */
        function clusterStyle(dom,width,markers){
            var width = width||500,dom = dom||"dituContent",containWidth = parseFloat($("."+dom).css('width'));
            if( containWidth < width){
                return new BMapLib.MarkerClusterer(map, {markers:markers,girdSize:500,maxZoom:16,isAverangeCenter:true});
            }else if(containWidth < 850){
                return new BMapLib.MarkerClusterer(map, {markers:markers,girdSize:500,maxZoom:14,isAverangeCenter:true});
            }else{
                return new BMapLib.MarkerClusterer(map, {markers:markers,girdSize:500,maxZoom:11,isAverangeCenter:true});
            }
        }
        /*加载所有的标记--旧的，带有信息的*/
        function loadAllMarkers(map){
            var markers = [];
            {loop $markers $k $v}
                var location = '{$v['location']}',
                p0 = location.split(',')[0],
                p1 = location.split(',')[1];
                if(p0&&p1) point = new BMap.Point(p0,p1);
                var marker = new BMap.Marker(point);
                // map.addOverlay(marker);//不用这个，使用点聚合
                markers.push(marker);
            {/loop}
            //最简单的用法，生成一个marker数组，然后调用markerClusterer类即可。
            var markerClusterer = clusterStyle("dituContent",500,markers);
            
        }
        /*根据形状类型改变markerStyle*/
        function changeMarkerStyleByShape(shape,markerStyle){
            if(shape=="BMap_Symbol_SHAPE_STAR"){
                // selectSet.symbolScale = 16;
                // markerStyleOptions.icon.setScale(16);
                markerStyle.icon.setPath(selectSet.starPath);
                markerStyle.icon.setAnchor(new BMap.Size(12,12));
            }else if(shape = "BMap_Symbol_SHAPE_RECTANGLE"){
                markerStyle.icon.setPath(selectSet.rectPath);
                markerStyle.icon.setAnchor(new BMap.Size(12,12));
            }
            else{
                // markerStyle.icon.setAnchor(new BMap.Size(0,0));
                markerStyle.icon.setPath(eval(shape));
            }
        }
        /*加载所有的多边形*/
        function loadAllOverlays(map){
            var simpleMarkers=[]
            {loop $overlays $k $v}
                var drawingType = "{$v['drawingType']}";
                switch(drawingType){
                    case "marker":
                        if(!!'{$v['geoJson']}'){
                            var location = '{$v['geoJson']}',
                            p0 = parseFloat(location.split(',')[0]),
                            p1 = parseFloat(location.split(',')[1]);
                            if(p0&&p1) pot = new BMap.Point(p0,p1);
                            if(!!'{$v['styleOptions']}'){
                                var newMarkerStyleOptions = {
                                     icon:new BMap.Symbol(BMap_Symbol_SHAPE_POINT, {
                                          scale: 1.2, //1.5, //图标缩放大小
                                          fillColor: "red", //填充颜色
                                          strokeColor: "red",
                                          fillOpacity: 1 //填充透明度
                                     })
                                };
                                var styleOpt = JSON.parse('{$v['styleOptions']}');
                                if(styleOpt.fillColor){ newMarkerStyleOptions.icon.setFillColor(styleOpt.fillColor);}
                                if(styleOpt.strokeColor){ newMarkerStyleOptions.icon.setStrokeColor(styleOpt.strokeColor);}//strokeColor和fillColor 一样
                                if(styleOpt.symbolType){
                                    var shape = styleOpt.symbolType;
                                    changeMarkerStyleByShape(shape,newMarkerStyleOptions);
                                }
                        
                            }
                            var marker1 = new BMap.Marker(pot,newMarkerStyleOptions||markerStyleOptions);
                            // map.addOverlay(marker1);
                            simpleMarkers.push(marker1);
                        }
                        
                        break;
                    case "polygon":
                    case "rectangle":
                        if('{$v['geoJson']}'){
                            var geoJson = JSON.parse('{$v['geoJson']}');
                            // styleOptions["data-id"] = '{$v['id']}';
                            styleOptions.fillOpacity = '{$v['id']}'/baseNum;//存放id
                            if('{$v['styleOptions']}'){
                                var styleOpt = JSON.parse('{$v['styleOptions']}');
                                if(styleOpt.strokeColor) styleOptions.strokeColor = styleOpt.strokeColor;
                            }
                            var poly = new BMap.Polygon(geoJson,styleOptions);
                            map.addOverlay(poly);
                        }
                        break;
                    case "polylin":
                        break;
                }
            {/loop}
            var markerClusterer = clusterStyle("dituContent",500,simpleMarkers);
        }
        /*Drawing*/
        function drawingManager(map) {
            var overlaycomplete = function(e) {
                drawingObj.push(e);
                addOverlay2DB(drawingObj);//完成之后自动提交
                overlays.push(e.overlay);
                if(e.overlay.point){
                     var overlayCoordinate = map.pointToOverlayPixel(e.overlay.point);
                     console.info(e.overlay.point,overlayCoordinate);

                } 
            };
            
            var myDrawingManagerObject = new BMapLib.DrawingManager(map, {
                isOpen: false, //是否开启绘制模式
                enableDrawingTool: true,
                enableCalculate: true,
                drawingToolOptions: {
                    anchor: BMAP_ANCHOR_TOP_RIGHT,
                    offset: new BMap.Size(5, 35),
                    drawingModes: [
                        BMAP_DRAWING_MARKER,
                        BMAP_DRAWING_CIRCLE,
                        BMAP_DRAWING_POLYLINE,
                        BMAP_DRAWING_POLYGON,
                        BMAP_DRAWING_RECTANGLE
                    ]
                },
                markerOptions:markerStyleOptions,
                circleOptions: styleOptions, //圆的样式
                polylineOptions: styleOptions, //线的样式
                polygonOptions: styleOptions, //多边形的样式
                rectangleOptions: styleOptions //矩形的样式

            });
            //添加鼠标绘制工具监听事件，用于获取绘制结果
            myDrawingManagerObject.addEventListener('overlaycomplete', overlaycomplete);

            var nodeName = "",pathTarget="",pathId="",className="",newPoint={},newPointStr="";
            $('body').on('click keydown',/*".dituContent",*/ function(event) {
                // event.preventDefault();
                var keyCode = "",
                    event = event || window.event;
                keyCode = event.keyCode;
                /*if(event.type=="click"&&(event.toElement.id ==="stylized"||event.toElement.id ==="top-bar")) return;*/
                // console.log(event);

                //撤销ctrl + Z
                if (event.ctrlKey == true && keyCode == "90") {
                    if (drawingManager) {
                        // drawingManager.close();
                        map.removeOverlay(overlays.pop());
                        //TODO 从数据库中删除
                    }
                }
                //是绘制的图形
                if (event.type == "click"){
                    nodeName = event.target.nodeName;
                    pathTarget = event.target;
                } 
                if (event.type == "click" && nodeName == "path") {
                    pathId = pathTarget.attributes["fill-opacity"].nodeValue * baseNum;
                    console.log(pathId);
                    //可编辑
                    // pathTarget.enableEditing();
                }
                //marker
                if (event.type == "click" && nodeName == "SPAN" && event.target.className=="BMap_Marker BMap_noprint") {
                    className = "BMap_Marker BMap_noprint";
                    var left = parseInt(event.target.style['left']),
                     top = parseInt(event.target.style['top']);
                    var pixel = new BMap.Pixel(left+11,top+30);
                    newPoint = map.overlayPixelToPoint(pixel);
                    newPointStr = newPoint.lng+","+newPoint.lat;
                    console.log(pixel,newPoint,newPointStr);
                }
                //是绘制的图形，按住delete删除
                if (event.type=="keydown" && keyCode == "46") {
                    if(nodeName == "path"){
                       console.log("delete:"+keyCode);
                       map.removeOverlay(pathTarget);
                       deleteOverlayFromDB("path",pathId); 
                    }else if( className == "BMap_Marker BMap_noprint"){//是点
                       console.log("delete marker:"+keyCode);
                       var zIndex = $(pathTarget).css("z-index");
                       console.warn(zIndex);
                       $('body').find("span.BMap_Marker").filter(function(){
                           if($(this).css("z-index")== zIndex) $(this).css('display', 'none');
                        });
                       deleteOverlayFromDB("marker",newPointStr); 
                    }
                }
                // }
            });
        }
        /**
         * [deleteOverlayFromDB 从数据库中删除]
         * @param  {[type]} pathId [id号]
         */
        function deleteOverlayFromDB(type,byField){
            $.post("<?php echo AJ_PATH;?>ceshimap/deleteOverlayFromDB.php",{
                "type":type,
                "byField":byField,
            },function(data){
                if(data == "0"){
                    alert("删除失败！");
                }
            });
        }
        /*获得我的位置：正确的应该是：121.428205,31.032651*/
        function getMyPosition(map){
          var myPosition = document.getElementById('myPosition');
                myPosition.addEventListener('click', function(event) {
                    var geolocation = new BMap.Geolocation();
                    geolocation.getCurrentPosition(function(r){
                        if(this.getStatus() == BMAP_STATUS_SUCCESS){
                            var mk = new BMap.Marker(r.point,markerOpt);
                            map.addOverlay(mk);
                            // map.panTo(r.point);
                            map.centerAndZoom(r.point,15);
                        }
                        else {
                            alert('定位失败，请重新定位'+this.getStatus());
                        }        
                    },{enableHighAccuracy: true})
                });   
            myPosition = null;//清除闭包       
        }
        /*测量距离  测量面积*/
        function toolbarEvent(map) {
            var getDis = document.getElementById('getDis'),
                getArea = document.getElementById('getArea'),
                distanceTool, area, myDrawingManagerObject;
            getDis.addEventListener('click', function() {
                closeOthers('getDis');
                distanceTool = new BMapLib.DistanceTool(map);
                distanceTool.open();
            });
            getArea.addEventListener('click', function() {
                closeOthers('getArea');
                myDrawingManagerObject = new BMapLib.DrawingManager(map, {
                    isOpen: true,
                    drawingType: BMAP_DRAWING_MARKER,
                    enableDrawingTool: false,
                    enableCalculate: true,
                    polygonOptions: {
                        strokeColor: "#ff6319",
                        strokeWeight: "1"
                    }
                });
                myDrawingManagerObject.setDrawingMode(BMAP_DRAWING_POLYGON);
                myDrawingManagerObject.open();
                myDrawingManagerObject.addEventListener('polygoncomplete', function(e) {
                    console.log(e);
                });
            });

            function closeOthers(whichIsOpen) {
                switch (whichIsOpen) {
                    case 'getArea':
                        if (distanceTool) distanceTool.close();
                        break;
                    case 'getDis':
                        if (myDrawingManagerObject) myDrawingManagerObject.close();
                        break;
                }
            }
        }
        /*搜索*/
        function searchByStationName() {
            var localSearch = new BMap.LocalSearch(map);
            localSearch.enableAutoViewport(); //允许自动调节窗体大小
            // map.clearOverlays(); //清空原来的标注
            var keyword = document.getElementById("address").value;
            if(!keyword) return;
            localSearch.setSearchCompleteCallback(function(searchResult) {
                var poi = searchResult.getPoi(0);
                document.getElementById("location").value = poi.point.lng + "," + poi.point.lat;
                serchByPoint(poi.point, 'flag');
                marker = new BMap.Marker(new BMap.Point(poi.point.lng, poi.point.lat)); // 创建标注，为要查询的地方对应的经纬度
                marker.enableDragging();
                map.addOverlay(marker);
                markerDrager(marker);
                var content = document.getElementById("address").value + "<br/><br/>经度：" + poi.point.lng + "<br/>纬度：" + poi.point.lat;
                var infoWindow = new BMap.InfoWindow("<p style='font-size:14px;'>" + content + "</p>");
                marker.addEventListener("click", function() {
                    this.openInfoWindow(infoWindow);
                });
                // marker.setAnimation(BMAP_ANIMATION_BOUNCE); //跳动的动画
            });
            localSearch.search(keyword, {
                forceLocal: true
            });
        }

        function markerDrager(marker) {
            marker.addEventListener('dragend', function() {
                document.getElementById("location").value = marker.point.lng + ',' + marker.point.lat;
                // console.log(marker.getPostion());
                serchByPoint(marker.point);
            });
        }

        function serchByPoint(point, f) {
            var arg = Array.prototype.slice.apply(arguments);
            map.centerAndZoom(point, 19);
            var geoc = new BMap.Geocoder();
            geoc.getLocation(point, function(rs) {
                var addComp = rs.addressComponents;
                if (!arg[1]) {
                    document.getElementById("address").value = addComp.street + addComp.streetNumber;
                }
                $('#province').val(addComp.province);
                $('#city').val(addComp.city);
                $('#district').val(addComp.district);
                if (rs.business) {
                    $('#town').val(rs.business + '镇');
                }
            });

        }
        /*定位*/
        /*定位button，回车*/
        $('body').on('click', '.getloc-btn', function(event) {
            searchByStationName();
        });
        $('body').on('keypress', '#address', function(event) {
            if(event.keyCode == "13"){   
                searchByStationName();
            }
        });
        /*定位img按钮*/
        $('#getPos').click(function(event) {
            // map.clearOverlays();
            document.getElementById("location").value = '';
            // var pushpin = new BMap.PushpinTool(map);
            var mkrTool = new BMapLib.MarkerTool(map, {
                autoClose: true,
                followText: "添加标注获取坐标"
            });
            mkrTool.open();
            mkrTool.addEventListener("markend", function(e) {
                e.marker.enableDragging();
                markerDrager(e.marker);
                var markerPoint = e.marker.point;
                serchByPoint(markerPoint);
                document.getElementById("location").value = markerPoint.lng + ',' + markerPoint.lat;

            });
        });
        /*$('#rentSetting').click(function(event) {
            var json;
            {loop $A $key $val}
                var item = {"rent":"{$val['rent']}","color":"{$val['color']}"};
            {/loop}
            $('#rentSettingDiv').html();
        });*/


        $('#sub').click(function() {
                if (overlays.length == 0) {
                    if ($("#address").val() == '') {
                        alert("地址信息不能为空！");
                        return false;
                    }
                    if ($("#rent").val() == '') {
                        alert("出租信息不能为空！");
                        return false;
                    }
                    if ($("#location").val() == '') {
                        alert("坐标信息不能为空！");
                        return false;
                    }
                    add2DB();
                } else {
                    if ($("#address").val()) {
                        add2DB();
                    }
                }
            })
            /*保存绘制的信息*/
        function addOverlay2DB(drawingObj) {
            var postData = {drawingType: "",geoJson: ""};//传给后天的数据
            for (var i = 0; i < drawingObj.length; i++) {
                var drawingType = drawingObj[i].drawingMode,
                    geoJson;
                if (drawingType == "circle") {

                } else if (drawingType == "marker") {
                    var pt = drawingObj[i].overlay.point;
                    geoJson = pt.lng+","+pt.lat;
                    var fillColor = markerStyleOptions.icon.style.fillColor,
                    strokeColor = markerStyleOptions.icon.style.strokeColor,
                    scale = markerStyleOptions.icon.style.scale,
                    styleOptions1 = {
                        fillColor:fillColor,
                        strokeColor:strokeColor,
                        scale:selectSet.symbolScale,
                        symbolType:selectSet.symbolType
                    };
                    postData.styleOptions = JSON.stringify(styleOptions1);//上传数据加入样式
                } else {
                    var styleOptions2 = {strokeColor:styleOptions.strokeColor};
                    postData.styleOptions = JSON.stringify(styleOptions2);
                    geoJson = JSON.stringify(drawingObj[i].overlay.ia);
                }

                postData.drawingType = drawingType;
                postData.geoJson = geoJson;

                $.post("<?php echo AJ_PATH;?>ceshimap/addOverlay2DB.php",postData, function(data) {
                    if(data == "0"){
                        alert("添加失败！");
                    }
                });
            }

            drawingObj.length = 0;
        }

        /*保存地址信息*/
        function add2DB() {
            $.post("<?php echo AJ_PATH;?>ceshimap/add2DB.php", {
                address: $("#address").val(),
                rent: $("#rent").val(),
                location: $("#location").val(),
                province: $("#province").val(),
                city: $("#city").val(),
                district: $("#district").val(),
                town: $("#town").val(),
                district: $("#district").val(),
                area: $("#area").val(),
                sellingPrice: $("#sellingPrice").val(),
                updateDate: formatDateTime()
            }, function(data) {
                alert(data);
            });
            clearInput();
        }
        /*选择颜色*/
        $('.BMapLib_marker,.BMapLib_circle,.BMapLib_polyline,.BMapLib_polygon,.BMapLib_rectangle').hover(function() {
            $('#select-pane').css('display', 'block');
            $('#select-style input:radio').eq(selectSet.radioInd1).prop('checked', true);
            $('#select-shape input:radio').eq(selectSet.radioInd2).prop('checked', true);
        }, function() {
        });
        $('body').on('click', '#top-bar, #stylized ,.dituContent, .BMapLib_Drawing_panel', function(event) {
            if($('#select-pane').css('display')!="none")
                $('#select-pane').css('display', 'none');
        });
        $('body').on('click', '#select-style input', function(event) {
            var ind = $(this).index();
            selectSet.radioInd1 = ind-1;
            if(!!$.trim($(this).val())){
                var color = $.trim($(this).val())||"red";
                markerStyleOptions.icon.setFillColor(color);
                markerStyleOptions.icon.setStrokeColor(color);
                //共用的包括矩形多边形等
                styleOptions.strokeColor = color;
                selectSet.radioColor = color;
                console.info(markerStyleOptions);
            }
            setTimeout(function(){
                $('#select-style input:radio').eq(ind-1).prop('checked', true);
            },0);
        });
        $('body').on('click', '#select-shape input', function(event) {
            var ind = $(this).index();
            selectSet.radioInd2 = ind-1;
            if(!!$.trim($(this).val())){
                var shape = $.trim($(this).val())||"BMap_Symbol_SHAPE_POINT";
                console.log($.trim($(this).val()),shape);
                selectSet.symbolType = shape;
                if(!selectSet.radioColor) selectSet.radioColor = "red";
                changeMarkerStyleByShape(shape,markerStyleOptions);
            }
            setTimeout(function(){
                $('#select-shape input:radio').eq(ind-1).prop('checked', true);
            },0);
        });
        function clearInput() {
            // map.centerAndZoom('上海市',12);
            $("#address").val('');
            $("#rent").val('');
            $("#location").val('');
            $("#area").val('');
            $("#sellingPrice").val('');
            $("#province").val('');
            $("#city").val('');
            $("#district").val('');
            $("#town").val('');
        }

    });
    
    </script>
</body>

</html>
