<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
    <meta name="keywords" content="21厂房网 地图模块" />
    <meta name="description" content="21厂房网 地图模块" />
    <title>21厂房网-查看地图</title>
    <!--引用百度地图API-->
    <style type="text/css">
    html,
    body {
        margin: 0;
        padding: 0;
        font-size: '微软雅黑';
    }
    
    .iw_poi_title {
        color: #CC5522;
        font-size: 14px;
        font-weight: bold;
        overflow: hidden;
        margin-top: 7px;
        margin-bottom: 10px;
        white-space: nowrap
    }
    
    .iw_poi_content {
        font: 14px arial, sans-serif;
        font-weight: bold;
        overflow: visible;
        padding-top: 4px;
        white-space: -moz-pre-wrap;
        word-wrap: break-word
    }
    
    #dituContent {
        width: 99.5%;
        height: 1000px;
        border: #ccc solid 1px;
    }
    
    #top-bar {
        position: relative;
        z-index: 999;
        padding-top: 12px;
        color: #fff;
        font-size: 16px;
        font-family: "微软雅黑";
        height: 40px;
        background-color: #008B00;
    }
    #top-bar > div{
        display: inline-block;
    }
    .login-div{
        width: 280px;
        display: inline-block;
    }
    #menus-bar{
        float: right;
        display: inline-block;
    }
    #menus-bar span{
        margin-left: 0.5rem;
        margin-top: -9px;   
        padding: 0.5rem;
    }
    #addPage a,
    #editPage a {
        color: #fff;
        text-decoration: none;
    }
    
    #menus-bar span:hover{
        background-color: #00a000;
    }
    .menus-bar-click{
        background-color: #00a000;
    }
    #toolbar {
        float: right;
        margin-right: 15px;
    }
    
    #toolbar img {
        width: 24px;
        height: 24px;
        margin-right: 0.3rem;
    }
    
    #toolbar img:hover {
        cursor: pointer;
        background-color: #00a000;
    }
    
    #back {
        margin-right: 0.6rem;
    }
    
    #back a {
        color: #fff;
    }
    #myPosition{
        position: fixed;
        top: 88%;
        left: 3%;
        width: 24px;
        padding: 5px;
        background-color: rgba(255,255,255,0.8);
    }
    #myPosition:hover{
        cursor: pointer;
    }
    #searchByText{
        position: absolute;
        top: 66px;
        left: 62px;
    }
    #searchByText input{
        height: 30px;
        width:7.5rem;
        font-size: 14px;
        padding-left: 10px;
        /*line-height: 1.5;*/
    }
    @media screen and (max-width: 320px){
        #top-bar{
            height: 66px;
        }
        #searchByText{
            top: 86px;
        }
    }
    @media screen and (max-width: 479.9px){
        html{
             font-size: 50% !important;
        }
        #top-bar{
            height: 50px;
        }
        #top-bar .welcome-log{
            display: none;
        }
        #searchByText input{
            width:120px;
            font-size: 12px;
        }
    }
    @media screen and (min-width: 480px){
        html{
             font-size: 62.5% !important;
        }
        #top-bar{
            height: 50px;
        }
        #menus-bar{
            font-size: 12px;
        }
        #top-bar .welcome-log{
            display: none;
        }
      
    }
    @media screen and (min-width: 640px){
        html{
             font-size: 125% !important;
        }
        #menus-bar{
            font-size: 12px;
        }
        #top-bar{
            height: 40px;
        }
        #top-bar .welcome-log{
            display: none;
        }
    }
    @media screen and (min-width: 768px) {
        html{
             font-size: 150% !important;
        }
        #menus-bar{
            font-size: 16px;
        }
        #top-bar .welcome-log{
            display: inline-block;
        }
        #stylized .sub {
            margin-right: 10%;
        }
    }
    
    @media screen and (min-width: 1024px) {
        html{
             font-size: 187.5% !important;
        }
        #menus-bar{
            font-size: 16px;
        }
        #top-bar .welcome-log{
            display: inline-block;
        }
    }
    /* @media screen and (min-width: 1280px) {
        #dituContent {
           height: 1200px;
       }
     } */ 
    </style>
    <script src="http://www.21changfang.com/skin/default/js/sea.js" type="text/javascript"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=TPrSyQXhBwEjWzfXzPw3iPXxqISq2idO"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/DistanceTool/1.2/src/DistanceTool_min.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/GeoUtils/1.2/src/GeoUtils_min.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js"></script>
    <!-- <script type="text/javascript" src="data:application/octet-stream;base64,KGZ1bmN0aW9uKCl7IHdpbmRvdy5CTWFwX2xvYWRTY3JpcHRUaW1lID0gKG5ldyBEYXRlKS5nZXRUaW1lKCk7IGRvY3VtZW50LndyaXRlKCc8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwOi8vYXBpLm1hcC5iYWlkdS5jb20vZ2V0c2NyaXB0P3Y9MS40JmFrPSZzZXJ2aWNlcz0mdD0yMDE1MDUyMjA5MzIxNyI+PC9zY3JpcHQ+Jyk7fSkoKTs="></script> -->
   
</head>

<body>
    <div id="top-bar">
        <div class="login-div"> {if $username==""}<span class="welcome-log">欢迎来到21厂房网！<span class="login"><b>[</b><a href="<?php echo AJ_PATH;?>member/login.php" title="">登陆</a><b>]</b></span>&nbsp;&nbsp;<span><b>[</b><a href="<?php echo AJ_PATH;?>member/register.php" title="">免费注册</a><b>]</b></span></span>{else}<span>您好，</span>{$username}{/if}
        </div>
        <div id="menus-bar">
            <span id="gotoCeshimap" class="menus-bar-click">查看地图</span>
            <span id="addPage"><a href="<?php echo AJ_PATH;?>ceshimap/add.php" target=" _blank">添加房源</a> </span>
            <span id="editPage"><a href="<?php echo AJ_PATH;?>ceshimap/dtEditor/edit.html"   target="_blank">修改房源</a> </span>
            <span id="back"><a href="<?php echo AJ_PATH;?>">返回首页</a></span>
        </div>
        <div id="toolbar">
            <img id="getDis" src="<?php echo AJ_PATH;?>file/image/distance.png" alt="测距离" />
            <img id="getArea" src="<?php echo AJ_PATH;?>file/image/area.png" alt="测面积" />
        </div>
    </div>
    <!--百度地图容器-->
    <div id="dituContent"></div>
    <div id="searchByText">
        <input type="text" placeholder="回车确认搜索" id="address" />
        <div id="r-result"></div>
    </div>
    <img id="myPosition" src="<?php echo AJ_PATH;?>file/image/myPosition.png" alt="我的位置" />

</body>
<script>
    /*高度自适应*/
    var dituContent = document.getElementById("dituContent"),
    totalHeight = document.documentElement.clientHeight,
    stylizedHight = document.getElementById("stylized")?document.getElementById("stylized").clientHeight:0,
    topBarHeight = document.getElementById("top-bar").clientHeight;
    dituContent.style.height = totalHeight - stylizedHight - topBarHeight -5 +"px";
    console.log(dituContent.style.height);

    window.onresize = debounce(function(){
        doResize();
    },500,false);
    function doResize(){
        var totalHeight = document.documentElement.clientHeight,
        stylizedHight = document.getElementById("stylized")?document.getElementById("stylized").clientHeight:0,

        topBarHeight = document.getElementById("top-bar").clientHeight;
        dituContent.style.height = totalHeight - stylizedHight - topBarHeight -5 +"px";

        console.log(dituContent.style.height);
    }
    function debounce(func,threshold,execAsap,fun){
        var timeout;
        return function debounced(){
            var obj = this,args = arguments;
            function delayed(){
                if(!execAsap) func.apply(obj,args);
                timeout = null;
            }
            if(timeout) {
                clearTimeout(timeout);
            }else if(execAsap){
                func.apply(obj,args);
            }
            timeout = setTimeout(delayed,threshold||200);
            if(fun) fun();
        }
    }
    </script>
<script type="text/javascript">
// define(function(require, exports, module) {

    var myBDMap = {
        init: function(markerArr, distJson) {
            var self = this;
            this.markerArr = markerArr;
            // console.log(markerArr);
            this.createMap(); //创建地图
            this.setMapEvent(); //设置地图事件
            this.getMyPosition();//定位
            this.addMapControl(); //向地图添加控件
            this.toolbarEvent();
            this.searchByText();//搜索
            this.map.addEventListener("zoomend", function() {
                var zoomSize = self.map.getZoom();
                // console.log(zoomSize);
                if (zoomSize <= 10) {
                    self.map.clearOverlays();
                    if (self.disMarker) delete self.disMarker;
                    self.addDistrictMarker(distJson, "nolabel");
                } else if (zoomSize > 10 && zoomSize < 13) {
                    if (self.disMarker) return;
                    self.map.clearOverlays();
                    self.addDistrictMarker(distJson, "hasLabel");
                    self.disMarkerEvent(); //鼠标进入触发
                } else if (zoomSize > 17) {
                    if (self.infoPolygonArray) return;
                    self.addAllInfoWindow();
                } else if (zoomSize >= 13 && zoomSize <= 17) {
                    if (self.initialMarker) return;
                    self.addMarker(); //向地图中添加marker
                }
            });
        },
        /**
         * 工具条  测距离和面积
         * @2016-11-19
         */
        toolbarEvent: function() {
            var self = this,
            getDis = document.getElementById('getDis'),
            getArea = document.getElementById('getArea'),
            distanceTool, area, myDrawingManagerObject;
          getDis.addEventListener('click', function() {
            closeOthers('getDis');
            distanceTool = new BMapLib.DistanceTool(self.map);
            distanceTool.open();
            /*distanceTool.addEventListener("drawend",function(e){
                console.log(e);
                console.log(e.distance);
            });*/
          });
          getArea.addEventListener('click', function() {
            closeOthers('getArea');
            /*area = new BMapLib.GeoUtils.getPolygonArea();
            alert("共" + area.toFixed(2) + "平方米");
            self.map.addOverlay(ply);*/
            myDrawingManagerObject = new BMapLib.DrawingManager(self.map, {
                isOpen: true,
                drawingType: BMAP_DRAWING_MARKER,
                enableDrawingTool: false,
                enableCalculate: true,
                polygonOptions: {
                    strokeColor: "#ff6319",
                    strokeWeight: "1"
                }
            });
            myDrawingManagerObject.setDrawingMode(BMAP_DRAWING_POLYGON);
            myDrawingManagerObject.open();
            myDrawingManagerObject.addEventListener('polygoncomplete', function(e) {
                // console.log(e);
            });
          });

            function closeOthers(whichIsOpen) {
            switch (whichIsOpen) {
                case 'getArea':
                    if (distanceTool) distanceTool.close();
                    break;
                case 'getDis':
                    if (myDrawingManagerObject) myDrawingManagerObject.close();
                    break;
            }
         }
        },
        /**
         * [searchByText 搜索框]
         * @return {[type]} [description]
         */
        searchByText:function(){
            var self = this,
                addressInput = document.getElementById('address'),
                localSearch = new BMap.LocalSearch(self.map/*,{
                    renderOptions: {map: self.map, panel: "r-result"}
                }*/);
            addressInput.addEventListener('keypress',function(event){
                if(event.keyCode == "13"){   
                    localSearch.enableAutoViewport(); //允许自动调节窗体大小
                    // map.clearOverlays(); //清空原来的标注
                    var keyword = this.value;
                    if(!keyword) return;
                    localSearch.setSearchCompleteCallback(function(searchResult) {
                        if(localSearch.getStatus()==0){
                            var poi = searchResult.getPoi(0);
                            // self.serchByPoint(poi.point, 'flag');
                            self.map.centerAndZoom(poi.point, 19);
                            var marker = new BMap.Marker(new BMap.Point(poi.point.lng, poi.point.lat)       ); // 创建标注，为要查询的地方对应的经纬度
                             marker.enableDragging();
                            self.map.addOverlay(marker);
                            var content = document.getElementById("address").value + "<br/><br/> 经度：" + poi.point.lng + "<br/>纬度：" + poi.point.lat;
                            var infoWindow = new BMap.InfoWindow("<p style='font-size:14px;'>" +        content + "</p>");
                            marker.addEventListener("click", function() {
                                this.openInfoWindow(infoWindow);
                            });
                            // marker.setAnimation(BMAP_ANIMATION_BOUNCE); //跳动的动画
                        }else{
                            //失败
                            // alert();
                        }
                        
                    });
                    localSearch.search(keyword, {
                        forceLocal: true
                    });
                }
            });
            
        },
        getMyPosition:function(){
            var self = this,
            myPosition = document.getElementById('myPosition');
            myPosition.addEventListener('click', function(event) {
                var geolocation = new BMap.Geolocation();
                geolocation.getCurrentPosition(function(r){
                    if(this.getStatus() == BMAP_STATUS_SUCCESS){
                        var mk = new BMap.Marker(r.point);
                        self.map.addOverlay(mk);
                        // self.map.panTo(r.point);
                        self.map.centerAndZoom(r.point,15);
                        // alert('您的位置：'+r.point.lng+','+r.point.lat);
                    }
                    else {
                        alert('定位失败，请重新定位'+this.getStatus());
                    }        
                },{enableHighAccuracy: true})
            });
        },
        createMap: function() {
            var map = new BMap.Map("dituContent"); //在百度地图容器中创建一个地图
            var point = new BMap.Point(121.571074, 31.052843); //定义一个中心点坐标
            map.centerAndZoom("上海市", 11); //设定地图的中心点和坐标并将地图显示在地图容器中
            // map.setMapType(BMAP_HYBRID_MAP);
            this.map = map;
        },
        //地图事件设置函数：
        setMapEvent: function() {
            this.map.enableDragging(); //启用地图拖拽事件，默认启用(可不写)
            this.map.enableScrollWheelZoom(); //启用地图滚轮放大缩小
            this.map.enableDoubleClickZoom(); //启用鼠标双击放大，默认启用(可不写)
            this.map.enableKeyboard(); //启用键盘上下左右键移动地图

            var stCtrl = new BMap.PanoramaControl(); //构造全景控件
            stCtrl.setOffset(new BMap.Size(20, 50));
            this.map.addControl(stCtrl); //添加全景控件
        },
        //地图控件添加函数：
        addMapControl: function() {
            var ctrl_nav = new BMap.NavigationControl({
                anchor: BMAP_ANCHOR_TOP_LEFT,
                type: BMAP_NAVIGATION_CONTROL_LARGE
            });
            this.map.addControl(ctrl_nav);
            //向地图中添加缩略图控件
            var ctrl_ove = new BMap.OverviewMapControl({
                anchor: BMAP_ANCHOR_BOTTOM_RIGHT,
                isOpen: 1
            });
            this.map.addControl(ctrl_ove);
            //向地图中添加比例尺控件
            var ctrl_sca = new BMap.ScaleControl({
                anchor: BMAP_ANCHOR_BOTTOM_LEFT
            });
            this.map.addControl(ctrl_sca);
            // 向地图中添加地图切换控件
            var ctrl_type = new BMap.MapTypeControl({
                anchor: BMAP_ANCHOR_TOP_RIGHT
            });
            this.map.addControl(ctrl_type);
        },
        //利用数据库查到地址
        addDistrictMarker: function(json, flag) {
            var self = this;
            self.dmJson = json;
            self.labelArray = [];
            if (flag && flag === "hasLabel") {
                this.disMarker = [];
            } else {
                this.disMarker_noLabel = [];
            }
            if (this.pcLayer) {
                this.map.removeTileLayer(self.pcLayer); // 清除覆盖区域图层测试
                delete this.pcLayer;
            }
            self.clearMarkers(['disMarker']);

            for (var i = 0; i < json.length; i++) {
                var district = json[i].district;
                var p0 = json[i].disLoc.split(",")[0];
                var p1 = json[i].disLoc.split(",")[1];
                var point = new BMap.Point(p0, p1);
                var rentMes = json[i].rentMes;
                var rentLabel = '';

                var circle = new BMap.Circle(point, 6000, {
                    strokeColor: "red",
                    fillColor: "red",
                    strokeWeight: 1
                });
                if (flag && flag === "hasLabel") {
                    var label = new BMap.Label(district, {
                        position: point,
                        offset: new BMap.Size(-25, -45)
                    });
                    label.setStyle({
                        color: "white",
                        backgroundColor: "rgba(255,0,0)",
                        fontSize: "14px",
                        height: "20px",
                        border: "none",
                        lineHeight: "20px",
                        fontFamily: "微软雅黑",
                        zIndex: "-9999"
                    });
                    self.labelArray.push(label);
                    self.map.addOverlay(label);

                    for (var m = 0; m < rentMes.length; m++) {
                        if (/^(?:出租|出售|待出租|待出售)$/.test(rentMes[m].rent)) {
                            rentLabel = rentMes[m].rent + ':' + rentMes[m].nums;
                            var label1 = new BMap.Label(rentLabel, {
                                position: point,
                                offset: new BMap.Size(-20, -25 + m * 20)
                            });
                            label1.setStyle({
                                color: "white",
                                backgroundColor: "rgba(255,0,0)",
                                border: "none",
                                fontSize: "12px",
                                fontFamily: "微软雅黑",
                                zIndex: "-9999"

                            });
                            self.labelArray.push(label1);
                            self.map.addOverlay(label1);
                        }
                    }
                    self.disMarker.push(circle);
                } else {
                    self.disMarker_noLabel.push(circle);
                }
                self.map.addOverlay(circle);
            }
            self.clearMarkers(['initialMarker']);
        },
        disMarkerEvent: function() {
            if (this.disMarker) {
                this.geoc = new BMap.Geocoder();
                this.bdary = new BMap.Boundary();
                for (var i = 0; i < this.disMarker.length; i++) {
                    this._disMarkerEventHandler(this.disMarker[i]);
                }
            }
        },
        _disMarkerEventHandler: function(marker) {
            var self = this;
            self.plyArray = [];
            marker.addEventListener("mouseover", function(e) {
                self.geoc.getLocation(marker.point, function(rs) {
                    var addComp = rs.addressComponents;
                    // console.log(addComp);
                    self.bdary.get(addComp.city + addComp.district, function(res) {
                        var count = res.boundaries.length; //行政区域的点有多少个
                        if (count === 0) {
                            return;
                        }
                        var pointArray = [];
                        for (var i = 0; i < count; i++) {
                            ply = new BMap.Polygon(res.boundaries[i], {
                                strokeWeight: 2,
                                strokeColor: "#ff0000",
                                fillColor: "#ccc",
                                fillOpacity: 0
                            }); //建立多边形覆盖物
                            self.plyArray.push(ply);
                            self.map.addOverlay(ply); //添加覆盖物
                            // pointArray = pointArray.concat(ply.getPath());
                            ply.addEventListener("click", function() {
                                self.map.zoomIn();
                                self.map.panTo(marker.point);
                                // console.log(addComp.district);
                            });
                        }
                    });

                });
            });
            marker.addEventListener("mouseout", function() {
                if (self.plyArray && self.plyArray.length !== 0) {
                    for (var i = 0; i < self.plyArray.length; i++) {
                        self.map.removeOverlay(self.plyArray[i]);
                    }
                }
            });
            /*marker.addEventListener("click",function(){
                self.map.zoomIn();
                console.log('点击marker');
            });*/

        },
        /*
    // 利用百度API在线解析地址
    addDistrictMarker:function(json,flag){
        var self  = this;
        self.dmJson = json;
        self.labelArray = [];
        if(flag&&flag==="hasLabel"){
            this.disMarker = [];
        }else{
            this.disMarker_noLabel = [];
        }
        this.ind = 0;
        self.clearMarkers(['disMarker']);
        
        var localSearch = new BMap.LocalSearch(self.map);
        for (var i = 0; i < json.length; i++) {
            (function(_i){
                localSearch.setSearchCompleteCallback(function(searchResult)
                {
                    var point = searchResult.getPoi(0).point;
                    self._localSearchCallback(point,_i,self,flag)
                });
                localSearch.search(self.dmJson[i].district, {
                     forceLocal: true
                });
            })(i);
        }
        self.clearMarkers(['initialMarker']);

    },
  
    _localSearchCallback:function(point,num,self,flag){
        var circle =new BMap.Circle(point,7000,{strokeColor:"red",fillColor:"red",strokeWeight:1});
        if(flag&&flag==="hasLabel"){
            var label = new BMap.Label(self.dmJson[self.ind].district,{position:point,offset:new BMap.Size(-30, -50) });
            label.setStyle({
                 color : "white",
                 backgroundColor:"rgba(255,0,0)",
                 fontSize : "18px",
                 height : "20px",
                 border:"none",
                 lineHeight : "20px",
                 fontFamily:"微软雅黑"
            });
            self.labelArray.push(label);
            self.map.addOverlay(label);

            var rentLabel='';
            var rentMes = self.dmJson[self.ind].rentMes;
            for (var m = 0; m < rentMes.length; m++) {
                if(rentMes[m].rent!='无出租'){
                    rentLabel = rentMes[m].rent+':'+rentMes[m].nums;
                    var label1 = new BMap.Label(rentLabel,{position:point,offset:new BMap.Size(-20, -25+m*20) });
                    label1.setStyle({
                         color : "white",
                         backgroundColor:"rgba(255,0,0)",
                         border:"none",
                         fontSize : "12px",
                         fontFamily:"微软雅黑"
                    });
                    self.labelArray.push(label1);
                    self.map.addOverlay(label1);
                }
            }
            self.disMarker.push(circle);
        }else{
            self.disMarker_noLabel.push(circle);
        }   
            this.ind++;
            self.map.addOverlay(circle);

    },*/
        addMarker: function() {
            var self = this;
            var initialMarker = [];
            markerArr = this.markerArr;
            if (this.pcLayer) {
                this.map.removeTileLayer(self.pcLayer); // 清除覆盖区域图层测试
                delete this.pcLayer;
            }
            for (var i = 0; i < markerArr.length; i++) {
                var json = markerArr[i];
                var p0 = json.point.split(",")[0];
                var p1 = json.point.split(",")[1];
                var point = new BMap.Point(p0, p1);
                var iconImg = createIcon(json.icon, 1.2, json.polygon.color);
                var marker = new BMap.Marker(point, {
                    icon: iconImg
                });
                initialMarker.push(marker);
                // var iw = createInfoWindow(i);
                // var label = new BMap.Label(json.title,{"offset":new BMap.Size(json.icon.lb-json.icon.x+10,-20)});
                // marker.setLabel(label);
                this.map.addOverlay(marker);
                // label.setStyle({
                //             borderColor:"#808080",
                //             color:"#333",
                //             cursor:"pointer"
                // });
                this._addEventHandler(json, marker);

            }
            self.initialMarker = initialMarker;
            //clear
            self.clearMarkers(['labelArray', 'disMarker', 'disMarker_noLabel', 'infoPolygonArray', 'markerArray']);

        },
        _addEventHandler: function(json, marker) {
            var self = this;
            marker.addEventListener("click", function(e) {
                self.createInfoWindow(json, e)
            });
            marker.addEventListener("mouseover", function(e) {
                self.createInfoWindow(json, e);
            });
            marker.addEventListener("mouseout", function(e) {
                self.map.closeInfoWindow();
            });

        },
        addAllInfoWindow: function() {
            var infoPolygonArray = [];
            var markerArray = [];
            var self = this;
            if (!this.pcLayer) {
                this.pcLayer = new BMap.PanoramaCoverageLayer();
                this.map.addTileLayer(self.pcLayer); // 覆盖区域图层测试
            }

            for (var i = 0; i < self.markerArr.length; i++) {
                var json = self.markerArr[i];
                var p0 = json.point.split(",")[0];
                var p1 = json.point.split(",")[1];
                var point = new BMap.Point(p0, p1);
                var iconImg = createIcon(json.icon, 1, json.polygon.color);
                var marker = new BMap.Marker(point, {
                    icon: iconImg
                });
                markerArray.push(marker);
                self.map.addOverlay(marker);

                var infoPolygon = new infoPolygonOverlay(point, json.title, json.content, json.polygon);
                infoPolygonArray.push(infoPolygon);
                self.map.addOverlay(infoPolygon);
            }
            self.infoPolygonArray = infoPolygonArray;
            self.markerArray = markerArray;
            //clearMarkers
            self.clearMarkers(['initialMarker']);
            /*if(this.initialMarker&&this.initialMarker.length!= 0){
                console.log(this.initialMarker);
                for (var j = 0,len=this.initialMarker.length; j < len; j++) {
                    self.map.removeOverlay(this.initialMarker[j]);
                }
                    delete this.initialMarker;
            }*/
        },
        clearMarkers: function(arg) {
            var self = this;
            var argArr = [];

            for (var i = 0; i < arg.length; i++) {
                argArr[i] = myBDMap[arg[i]];
                if (argArr[i] && argArr[i].length != 0) {
                    for (var j = 0, len = argArr[i].length; j < len; j++) {
                        self.map.removeOverlay(argArr[i][j]);
                    }
                    delete myBDMap[arg[i]];
                }
            }
        },

        //创建InfoWindow
        createInfoWindow: function(json, e) {
            var opts = {
                width: 220, // 信息窗口宽度
                height: 60, // 信息窗口高度
                // title: "信息窗口", // 信息窗口标题
                enableMessage: true //设置允许信息窗发送短息
            };
            var content = "<p class='iw_poi_title' title='" + json.title + "'>" + json.title + "【" + json.content + "】" + "</p><div class='iw_poi_content'>" + "面积:" + json.area + "&nbsp㎡&nbsp&nbsp售价:" + json.sellingPrice + "&nbsp元/㎡/天</div>";
            var p = e.target;
            var point = new BMap.Point(p.getPosition().lng, p.getPosition().lat);
            var infoWindow = new BMap.InfoWindow(content, opts); // 创建信息窗口对象 
            this.map.openInfoWindow(infoWindow, point); //开启信息窗口
        },

    };

function infoPolygonOverlay(point, title, text, polygon) {
    this._point = point;
    this._title = title;
    this._text = text;
    this._color = polygon.color;
    this._polygon = polygon;
}
infoPolygonOverlay.prototype = new BMap.Overlay();
infoPolygonOverlay.prototype.initialize = function() {
    var div = this._div = document.createElement("div");
    div.style.position = "absolute";
    // div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);
    div.style.backgroundColor = this._color;
    div.style.border = "1px solid #BC3B3A";
    div.style.color = "white";
    // div.style.height = this._polygon.height+"px";
    div.style.width = this._polygon.width + "px";
    div.style.padding = "2px 5px 2px 5px";
    div.style.lineHeight = "18px";
    div.style.borderRadius = "10px";
    // div.style.whiteSpace = "nowrap";
    div.style.MozUserSelect = "none";
    div.style.fontSize = "12px"
    var span = this._span = document.createElement("span");
    div.appendChild(span);
    span.appendChild(document.createTextNode(this._title + '【' + this._text + '】'));
    var that = this;

    var arrow = this._arrow = document.createElement("div");
    arrow.style.background = "url(http://map.baidu.com/fwmap/upload/r/map/fwmap/static/house/images/label.png) no-repeat";
    arrow.style.position = "absolute";
    arrow.style.width = "11px";
    arrow.style.height = "10px";
    arrow.style.color = this._color;
    arrow.style.top = "22px";
    arrow.style.left = "5px";
    arrow.style.overflow = "hidden";
    arrow.style.zIndex = '-999';
    div.appendChild(arrow);

    myBDMap.map.getPanes().labelPane.appendChild(div);

    return div;
};

infoPolygonOverlay.prototype.draw = function() {
    var pixel = myBDMap.map.pointToOverlayPixel(this._point);
    this._div.style.left = pixel.x - parseInt(this._arrow.style.left) + "px";
    this._div.style.top = pixel.y - 50 + "px";
};



//创建一个Icon
function createIcon(jsonIcon, scale, color) {
    // var icon = new BMap.Icon("http://app.baidu.com/map/images/us_mk_icon.png", new BMap.Size(json.w, json.h), {
    //     imageOffset: new BMap.Size(-json.l, -json.t),
    //     infoWindowOffset: new BMap.Size(json.lb + 5, 1),
    //     offset: new BMap.Size(json.x, json.h)
    // });
    var icon = new BMap.Symbol(BMap_Symbol_SHAPE_POINT, {
        anchor: jsonIcon.l, //位置偏移
        scale: scale || jsonIcon.w / 15, //1.5, //图标缩放大小
        fillColor: color, //填充颜色
        strokeColor: color,
        fillOpacity: 1 //填充透明度
    })
    return icon;
}

//构建数组
/********************************************************/
var JosnList = []; 
{loop $A $key $v}
var item = {
    title: "{$v['address']}",
    content: "{$v['rent']}",
    point: "{$v['location']}",
    area: "{$v['area']}",
    sellingPrice: "{$v['sellingPrice']}",
    polygon: {
        width: 150,
        height: 50,
        color: "{$v['color']}"
    },
    isOpen: 0,
    icon: {
        w: 21,
        h: 21,
        l: 0,
        t: 0,
        x: 6,
        lb: 5
    }
};
JosnList.push(item); 
{/loop}

    var markerArr = JosnList;
    /********************************************************/
    var distJson = []; 
{loop $distNumsArray $key2 $v2}
    var item = {
        district: "{$v2['district']}",
        disLoc: "{$v2['disLoc']}",
        rent: "{$v2['rent']}",
        nums: "{$v2['nums']}"
    };
    distJson.push(item); 
{/loop}

        var distJson1 = []; //我们需要的分区显示数据
        var rentObj = {
            'rent': distJson[0].rent,
            'nums': distJson[0].nums
        }
        var it = {
            'district': distJson[0].district,
            'disLoc': distJson[0].disLoc,
            'rentMes': []
        }
        it.rentMes.push(rentObj);
        distJson1.push(it);

        for (var i = 0, len = distJson.length - 1; i < len; i++) {
            if (len) {
                var rentObj = {
                    'rent': distJson[i + 1].rent,
                    'nums': distJson[i + 1].nums
                }
                if (distJson[i + 1].district != distJson[i].district) {
                    it = {
                        'district': distJson[i + 1].district,
                        'disLoc': distJson[i + 1].disLoc,
                        'rentMes': []
                    }
                    it.rentMes.push(rentObj);
                    distJson1.push(it);
                } else {
                    it.rentMes.push(rentObj);
                }
            }
        }
        /*var markerArr = [{
            title: "剑川路951号-零号湾创业园区",
            district:"闵行区",
            content: "出售",
            point: "121.428205,31.032651",
            polygon: {
                width: 150,
                height: 50,
                color: "red"
            },
            isOpen: 0,
            icon: {
                w: 21,
                h: 21,
                l: 0,
                t: 0,
                x: 6,
                lb: 5
            }
        }, {
            title: "XX路5800号",
            district:"奉贤区",
            content: "不出售",
            point: "121.470463,30.924058",
            polygon: {
                width: 150,
                height: 50,
                color: "blue"
            },
            isOpen: 0,
            icon: {
                w: 21,
                h: 21,
                l: 0,
                t: 0,
                x: 6,
                lb: 5
            }
        }, {
            title: "东川路500号",
            district:"闵行区",
            content: "出售",
            point: "121.430463,30.994058",
            polygon: {
                width: 150,
                height: 50,
                color: "red"
            },
            isOpen: 0,
            icon: {
                w: 21,
                h: 21,
                l: 0,
                t: 0,
                x: 6,
                lb: 5
            }
        },{
            title: "XX路500号",
            district:"奉贤区",
            content: "不出售",
            point: "121.470463,30.934058",
            polygon: {
                width: 150,
                height: 50,
                color: "red"
            },
            isOpen: 0,
            icon: {
                w: 21,
                h: 21,
                l: 0,
                t: 0,
                x: 6,
                lb: 5
            }
        }];*/
        myBDMap.init(markerArr, distJson1); //创建和初始化地图
        // console.log(myBDMap.markerArr);
// });

</script>

</html>
